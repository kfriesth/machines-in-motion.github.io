<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="demo__usb__stream__imu__3DM__GX3__25_8cpp" kind="file" language="C++">
    <compoundname>demo_usb_stream_imu_3DM_GX3_25.cpp</compoundname>
    <includes refid="timer_8hpp" local="yes">real_time_tools/timer.hpp</includes>
    <includes refid="usb__stream_8hpp" local="yes">real_time_tools/usb_stream.hpp</includes>
    <incdepgraph>
      <node id="106">
        <label>iomanip</label>
      </node>
      <node id="95">
        <label>demos/demo_usb_stream_imu_3DM_GX3_25.cpp</label>
        <link refid="demo__usb__stream__imu__3DM__GX3__25_8cpp"/>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>stdint.h</label>
      </node>
      <node id="99">
        <label>cmath</label>
      </node>
      <node id="101">
        <label>string</label>
      </node>
      <node id="104">
        <label>real_time_tools/usb_stream.hpp</label>
        <link refid="usb__stream_8hpp_source"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
        <childnode refid="108" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="96">
        <label>real_time_tools/timer.hpp</label>
        <link refid="timer_8hpp"/>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
        <childnode refid="102" relation="include">
        </childnode>
      </node>
      <node id="97">
        <label>unistd.h</label>
      </node>
      <node id="109">
        <label>vector</label>
      </node>
      <node id="103">
        <label>boost/filesystem.hpp</label>
      </node>
      <node id="105">
        <label>array</label>
      </node>
      <node id="108">
        <label>sstream</label>
      </node>
      <node id="107">
        <label>iostream</label>
      </node>
      <node id="100">
        <label>deque</label>
      </node>
      <node id="98">
        <label>chrono</label>
      </node>
      <node id="102">
        <label>real_time_tools/iostream.hpp</label>
        <link refid="iostream_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="demo__usb__stream__imu__3DM__GX3__25_8cpp_1af411ef352aef0f8d040d8d60c49eac7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void continuous_mode_on</definition>
        <argsstring>(real_time_tools::UsbStream &amp;usb_stream, bool stream_mode)</argsstring>
        <name>continuous_mode_on</name>
        <param>
          <type><ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref> &amp;</type>
          <declname>usb_stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stream_mode</declname>
        </param>
        <briefdescription>
<para>Send the message that set the imu into stream mode or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usb_stream</parametername>
</parameternamelist>
<parameterdescription>
<para>is the usb interface. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>start or stop the stream mode. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Here we set the IMU into a constant broadcasting mode. The broadcasted data are composed with the accelerometer and the gyroscope. <ulink url="https://atlas.is.localnet/confluence/display/AMDW/Microstrain+3DM+IMUs?preview=/8979810/17761244/3DM-GX3-Data-Communications-Protocol.pdf">https://atlas.is.localnet/confluence/display/AMDW/Microstrain+3DM+IMUs?preview=/8979810/17761244/3DM-GX3-Data-Communications-Protocol.pdf</ulink></para>        </inbodydescription>
        <location file="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" line="22" column="1" bodyfile="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" bodystart="22" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="demo__usb__stream__imu__3DM__GX3__25_8cpp_1a8a096d7f567dad6d28f0fd870ba6bb43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool is_continuous_mode_on</definition>
        <argsstring>(real_time_tools::UsbStream &amp;usb_stream, bool stream_mode)</argsstring>
        <name>is_continuous_mode_on</name>
        <param>
          <type><ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref> &amp;</type>
          <declname>usb_stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stream_mode</declname>
        </param>
        <briefdescription>
<para>Check the mode of the imu. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usb_stream</parametername>
</parameternamelist>
<parameterdescription>
<para>usb communication interface. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_mode</parametername>
</parameternamelist>
<parameterdescription>
<para>read the socket in stream mode or not. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true imu is in stream mode </para></simplesect>
<simplesect kind="return"><para>false imu is in idle mode </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>Ask current mode <ulink url="https://atlas.is.localnet/confluence/display/AMDW/Microstrain+3DM+IMUs?preview=/8979810/17761244/3DM-GX3-Data-Communications-Protocol.pdf">https://atlas.is.localnet/confluence/display/AMDW/Microstrain+3DM+IMUs?preview=/8979810/17761244/3DM-GX3-Data-Communications-Protocol.pdf</ulink></para>        </inbodydescription>
        <location file="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" line="60" column="1" bodyfile="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" bodystart="60" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="demo__usb__stream__imu__3DM__GX3__25_8cpp_1a1d00f7ae49ec05ecaf8ecd4d76129573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void continuous_mode_off</definition>
        <argsstring>(real_time_tools::UsbStream &amp;usb_stream, bool stream_mode)</argsstring>
        <name>continuous_mode_off</name>
        <param>
          <type><ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref> &amp;</type>
          <declname>usb_stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stream_mode</declname>
        </param>
        <briefdescription>
<para>Set the imu into idle mode. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usb_stream</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_mode</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Here we set the IMU into a constant broadcasting mode. The broadcasted data are composed with the accelerometer and the gyroscope. <ulink url="https://atlas.is.localnet/confluence/display/AMDW/Microstrain+3DM+IMUs?preview=/8979810/17761244/3DM-GX3-Data-Communications-Protocol.pdf">https://atlas.is.localnet/confluence/display/AMDW/Microstrain+3DM+IMUs?preview=/8979810/17761244/3DM-GX3-Data-Communications-Protocol.pdf</ulink></para>        </inbodydescription>
        <location file="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" line="90" column="1" bodyfile="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" bodystart="90" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="demo__usb__stream__imu__3DM__GX3__25_8cpp_1af04ed9328c659fc57f91d74cdeedda72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reset</definition>
        <argsstring>(real_time_tools::UsbStream &amp;usb_stream, bool stream_mode)</argsstring>
        <name>reset</name>
        <param>
          <type><ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref> &amp;</type>
          <declname>usb_stream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>stream_mode</declname>
        </param>
        <briefdescription>
<para>Reset the imu. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>usb_stream</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>stream_mode</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
<para>Device reset</para>        </inbodydescription>
        <location file="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" line="126" column="1" bodyfile="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" bodystart="126" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="demo__usb__stream__imu__3DM__GX3__25_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int main</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>main</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Example on how to use the usb interface using an imu. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>int </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>The software input is the path to the port: /dev/tty0</para><para>Initialization, the IMU should blink slowly</para><para>We create a UsbStream object that will allow us to interact with the dev port.</para><para>If you receive some permission denied, please add yourself in the &quot;dialout&quot; group: sudo usermod -a -G dialout [YOUR_USER_NAME] Ask an admin to do it for you if you do not have the sudo rights.</para><para>We need to create some port configuration. These configuration are valid for the IMU 3DM-GX3-25 from micro-strain initialization.</para><para>send some messages</para>        </inbodydescription>
        <location file="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" line="156" column="1" bodyfile="demos/demo_usb_stream_imu_3DM_GX3_25.cpp" bodystart="156" bodyend="222"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Testing imu connection directly via the drivers. See test_interface in the same package for an example of the API. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Berenz (<ulink url="mailto:vincent.brenz@tuebingen.mpg.de">vincent.brenz@tuebingen.mpg.de</ulink>) </para></simplesect>
<simplesect kind="version"><para>0.1 </para></simplesect>
<simplesect kind="date"><para>2019-05-09</para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="13"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="timer_8hpp" kindref="compound">real_time_tools/timer.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/usb_stream.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="demo__usb__stream__imu__3DM__GX3__25_8cpp_1af411ef352aef0f8d040d8d60c49eac7a" kindref="member">continuous_mode_on</ref>(<ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref>&amp;<sp/>usb_stream,</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stream_mode)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>reply;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>command;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/>command.resize(4);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>command[0]<sp/>=<sp/>0xc4;<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>continuous<sp/>mode<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>command[1]<sp/>=<sp/>0xc1;<sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>confirmation<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>command[2]<sp/>=<sp/>0x29;<sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>confirmation<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>command[3]<sp/>=</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0xc2;<sp/><sp/></highlight><highlight class="comment">//<sp/>Acceleration<sp/>and<sp/>angular<sp/>rate<sp/>continuously<sp/>broadcasted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>reply.resize(8,<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>answer<sp/>in<sp/>8<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;The<sp/>IMU<sp/>will<sp/>blink<sp/>fast\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(reply[0]<sp/>==<sp/>0xC4<sp/>&amp;&amp;<sp/>reply[1]<sp/>==<sp/>0xc2))</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1aa9fdd0d43fbf0cddbffb65538af60321" kindref="member">write_device</ref>(command);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1a028f39fcd8c97c49aacf48fdaa8302c8" kindref="member">read_device</ref>(reply,<sp/>stream_mode);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Device<sp/>answer<sp/>is:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1UsbStream_1ac98f3cad23dbc85f47405c3809a22198" kindref="member">real_time_tools::UsbStream::msg_debug_string</ref>(reply).c_str());</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;The<sp/>IMU<sp/>should<sp/>blink<sp/>fast\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="50"><highlight class="normal">}</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="demo__usb__stream__imu__3DM__GX3__25_8cpp_1a8a096d7f567dad6d28f0fd870ba6bb43" kindref="member">is_continuous_mode_on</ref>(<ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref>&amp;<sp/>usb_stream,</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stream_mode)</highlight></codeline>
<codeline lineno="62"><highlight class="normal">{</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>reply;</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>command;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>command.resize(4);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>command[0]<sp/>=<sp/>0xd4;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>continuous<sp/>mode<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>command[1]<sp/>=<sp/>0xa3;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>confirmation<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>command[2]<sp/>=<sp/>0x47;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>confirmation<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>command[3]<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>request<sp/>continuous<sp/>mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>reply.resize(4,<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>answer<sp/>in<sp/>8<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>success<sp/>=<sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1aa9fdd0d43fbf0cddbffb65538af60321" kindref="member">write_device</ref>(command);</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/>success<sp/>=<sp/>success<sp/>&amp;&amp;<sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1a028f39fcd8c97c49aacf48fdaa8302c8" kindref="member">read_device</ref>(reply,<sp/>stream_mode);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;is<sp/>continuous<sp/>mode<sp/>reply:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1UsbStream_1ac98f3cad23dbc85f47405c3809a22198" kindref="member">real_time_tools::UsbStream::msg_debug_string</ref>(reply).c_str());</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>success<sp/>&amp;&amp;<sp/>(reply[1]<sp/>&gt;<sp/>0);</highlight></codeline>
<codeline lineno="82"><highlight class="normal">}</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="demo__usb__stream__imu__3DM__GX3__25_8cpp_1a1d00f7ae49ec05ecaf8ecd4d76129573" kindref="member">continuous_mode_off</ref>(<ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref>&amp;<sp/>usb_stream,</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stream_mode)</highlight></codeline>
<codeline lineno="92"><highlight class="normal">{</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>reply;</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>command;</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>command.resize(4);</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/>command[0]<sp/>=<sp/>0xc4;<sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>continuous<sp/>mode<sp/>on</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/>command[1]<sp/>=<sp/>0xc1;<sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>confirmation<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/>command[2]<sp/>=<sp/>0x29;<sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>confirmation<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>command[3]<sp/>=</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x00;<sp/><sp/></highlight><highlight class="comment">//<sp/>Acceleration<sp/>and<sp/>angular<sp/>rate<sp/>continuously<sp/>broadcasted</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>reply.resize(8,<sp/>0xFF);<sp/><sp/></highlight><highlight class="comment">//<sp/>answer<sp/>in<sp/>8<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;The<sp/>IMU<sp/>will<sp/>blink<sp/>slowly\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(!(reply[0]<sp/>==<sp/>0xC4<sp/>&amp;&amp;<sp/>reply[1]<sp/>==<sp/>0x00))</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1aa9fdd0d43fbf0cddbffb65538af60321" kindref="member">write_device</ref>(command);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1a028f39fcd8c97c49aacf48fdaa8302c8" kindref="member">read_device</ref>(reply,<sp/>stream_mode);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Device<sp/>answer<sp/>is:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1UsbStream_1ac98f3cad23dbc85f47405c3809a22198" kindref="member">real_time_tools::UsbStream::msg_debug_string</ref>(reply).c_str());</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;The<sp/>IMU<sp/>should<sp/>blink<sp/>slowly\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="118"><highlight class="normal">}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="demo__usb__stream__imu__3DM__GX3__25_8cpp_1af04ed9328c659fc57f91d74cdeedda72" kindref="member">reset</ref>(<ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref>&amp;<sp/>usb_stream,<sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stream_mode)</highlight></codeline>
<codeline lineno="127"><highlight class="normal">{</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>reply;</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>std::vector&lt;uint8_t&gt;<sp/>command;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/>command.resize(3);</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/>command[0]<sp/>=<sp/>0xfe;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>reset<sp/>device</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/>command[1]<sp/>=<sp/>0x9e;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>confirmation<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/>command[2]<sp/>=<sp/>0x3a;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>user<sp/>confirmation<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/>reply.resize(0,<sp/>0);<sp/><sp/></highlight><highlight class="comment">//<sp/>answer<sp/>in<sp/>8<sp/>bits.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;The<sp/>IMU<sp/>is<sp/>resetting\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1aa9fdd0d43fbf0cddbffb65538af60321" kindref="member">write_device</ref>(command);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1a028f39fcd8c97c49aacf48fdaa8302c8" kindref="member">read_device</ref>(reply,<sp/>stream_mode);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Device<sp/>answer<sp/>is:<sp/>%s\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1UsbStream_1ac98f3cad23dbc85f47405c3809a22198" kindref="member">real_time_tools::UsbStream::msg_debug_string</ref>(reply).c_str());</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;The<sp/>IMU<sp/>is<sp/>reset\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1Timer_1a0a0df8a3baef34e820203e5579afda38" kindref="member">real_time_tools::Timer::sleep_sec</ref>(10);</highlight></codeline>
<codeline lineno="147"><highlight class="normal">}</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="demo__usb__stream__imu__3DM__GX3__25_8cpp_1a3c04138a5bfe5d72780bb7e82a18e627" kindref="member">main</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/>argv)</highlight></codeline>
<codeline lineno="157"><highlight class="normal">{</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(argc<sp/>!=<sp/>2)</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>printf(</highlight><highlight class="stringliteral">&quot;usage:<sp/>demo_device_stream<sp/>&lt;device&gt;\ne.g.<sp/>%s<sp/>/dev/tty0\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>argv[0]);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Let<sp/>us<sp/>acquire<sp/>the<sp/>device<sp/>path<sp/>from<sp/>the<sp/>application<sp/>arguments</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>device<sp/>=<sp/>std::string(argv[1]);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1UsbStream" kindref="compound">real_time_tools::UsbStream</ref><sp/>usb_stream;</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1a1f6915c42d9742ced10e99d2edf7d8b1" kindref="member">open_device</ref>(device))</highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>-1;</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1PortConfig" kindref="compound">real_time_tools::PortConfig</ref><sp/>port_config;</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/>port_config.<ref refid="classreal__time__tools_1_1PortConfig_1ad89a20459faf7718a63ea8c00ddc5e34" kindref="member">rts_cts_enabled_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/>port_config.<ref refid="classreal__time__tools_1_1PortConfig_1afdc811c6c73ada4b21dab246bf086506" kindref="member">parity_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/>port_config.<ref refid="classreal__time__tools_1_1PortConfig_1a3303d793237edbfa0b3c28f3f01c3837" kindref="member">stop_bits_</ref><sp/>=<sp/>real_time_tools::PortConfig::StopBits::one;</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/>port_config.<ref refid="classreal__time__tools_1_1PortConfig_1a6c1dbeb3cf3c772c9c1b4df71b8befd6" kindref="member">prepare_size_definition_</ref><sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/>port_config.<ref refid="classreal__time__tools_1_1PortConfig_1af80f9991e3811392385208a9baf9c6fd" kindref="member">data_bits_</ref><sp/>=<sp/>real_time_tools::PortConfig::cs8;</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>port_config.<ref refid="classreal__time__tools_1_1PortConfig_1aa0be2d74f3ac70e9f43d36fc0c70901a" kindref="member">baude_rate_</ref><sp/>=<sp/>115200;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1adb0c41dc7a9603022a0a1e19c9ab8292" kindref="member">set_port_config</ref>(port_config);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1a1c61741541acfca7ecf6deaf0b8ad1fc" kindref="member">set_poll_mode_timeout</ref>(0.1);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>stream<sp/>mode<sp/>of<sp/>the<sp/>usb<sp/>port</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>stream_mode<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1Timer_1a0a0df8a3baef34e820203e5579afda38" kindref="member">real_time_tools::Timer::sleep_sec</ref>(1);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="demo__usb__stream__imu__3DM__GX3__25_8cpp_1af411ef352aef0f8d040d8d60c49eac7a" kindref="member">continuous_mode_on</ref>(usb_stream,<sp/>stream_mode);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classreal__time__tools_1_1Timer_1a0a0df8a3baef34e820203e5579afda38" kindref="member">real_time_tools::Timer::sleep_sec</ref>(5);</highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1a0bc5fb5783f1833341d55b9b013be6c6" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="demo__usb__stream__imu__3DM__GX3__25_8cpp_1a1d00f7ae49ec05ecaf8ecd4d76129573" kindref="member">continuous_mode_off</ref>(usb_stream,<sp/>stream_mode);</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1a0bc5fb5783f1833341d55b9b013be6c6" kindref="member">flush</ref>();</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Close<sp/>port\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>usb_stream.<ref refid="classreal__time__tools_1_1UsbStream_1acea75055bb37f2a7f351300dbaf28d9e" kindref="member">close_device</ref>();</highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>rt_printf(</highlight><highlight class="stringliteral">&quot;Stop<sp/>program\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="222"><highlight class="normal">}</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="demos/demo_usb_stream_imu_3DM_GX3_25.cpp"/>
  </compounddef>
</doxygen>
