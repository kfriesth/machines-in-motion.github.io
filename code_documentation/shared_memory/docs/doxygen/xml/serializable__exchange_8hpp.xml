<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="serializable__exchange_8hpp" kind="file" language="C++">
    <compoundname>serializable_exchange.hpp</compoundname>
    <includes local="no">cstring</includes>
    <includes local="no">deque</includes>
    <includes local="no">stdexcept</includes>
    <includes local="no">string</includes>
    <includes local="yes">shared_memory/serializable.hpp</includes>
    <includes refid="shared__memory_8hpp" local="yes">shared_memory/shared_memory.hpp</includes>
    <includes refid="serializable__exchange_8hxx" local="yes">serializable_exchange.hxx</includes>
    <incdepgraph>
      <node id="1154">
        <label>shared_memory/serializer.hxx</label>
        <link refid="serializer_8hxx_source"/>
      </node>
      <node id="1150">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="1145">
        <label>shared_memory/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="1146" relation="include">
        </childnode>
        <childnode refid="1135" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
      </node>
      <node id="1149">
        <label>shared_memory/serializer.hpp</label>
        <link refid="serializer_8hpp_source"/>
        <childnode refid="1150" relation="include">
        </childnode>
        <childnode refid="1151" relation="include">
        </childnode>
        <childnode refid="1152" relation="include">
        </childnode>
        <childnode refid="1147" relation="include">
        </childnode>
        <childnode refid="1153" relation="include">
        </childnode>
        <childnode refid="1154" relation="include">
        </childnode>
      </node>
      <node id="1131">
        <label>stdexcept</label>
      </node>
      <node id="1134">
        <label>shared_memory/shared_memory.hpp</label>
        <link refid="shared__memory_8hpp"/>
        <childnode refid="1135" relation="include">
        </childnode>
        <childnode refid="1136" relation="include">
        </childnode>
        <childnode refid="1137" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
        <childnode refid="1138" relation="include">
        </childnode>
        <childnode refid="1139" relation="include">
        </childnode>
        <childnode refid="1140" relation="include">
        </childnode>
        <childnode refid="1141" relation="include">
        </childnode>
        <childnode refid="1142" relation="include">
        </childnode>
        <childnode refid="1143" relation="include">
        </childnode>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1145" relation="include">
        </childnode>
        <childnode refid="1148" relation="include">
        </childnode>
        <childnode refid="1149" relation="include">
        </childnode>
        <childnode refid="1155" relation="include">
        </childnode>
      </node>
      <node id="1142">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="1132">
        <label>string</label>
      </node>
      <node id="1136">
        <label>map</label>
      </node>
      <node id="1146">
        <label>exception</label>
      </node>
      <node id="1155">
        <label>shared_memory/shared_memory.hxx</label>
        <link refid="shared__memory_8hxx"/>
        <childnode refid="1134" relation="include">
        </childnode>
      </node>
      <node id="1143">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="1138">
        <label>vector</label>
      </node>
      <node id="1133">
        <label>shared_memory/serializable.hpp</label>
      </node>
      <node id="1141">
        <label>boost/interprocess/containers/deque.hpp</label>
      </node>
      <node id="1153">
        <label>utility</label>
      </node>
      <node id="1147">
        <label>sstream</label>
      </node>
      <node id="1156">
        <label>serializable_exchange.hxx</label>
        <link refid="serializable__exchange_8hxx"/>
      </node>
      <node id="1140">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="1135">
        <label>iostream</label>
      </node>
      <node id="1130">
        <label>deque</label>
      </node>
      <node id="1128">
        <label>include/shared_memory/serializable_exchange.hpp</label>
        <link refid="serializable__exchange_8hpp"/>
        <childnode refid="1129" relation="include">
        </childnode>
        <childnode refid="1130" relation="include">
        </childnode>
        <childnode refid="1131" relation="include">
        </childnode>
        <childnode refid="1132" relation="include">
        </childnode>
        <childnode refid="1133" relation="include">
        </childnode>
        <childnode refid="1134" relation="include">
        </childnode>
        <childnode refid="1156" relation="include">
        </childnode>
      </node>
      <node id="1148">
        <label>shared_memory/segment_info.hpp</label>
        <link refid="segment__info_8hpp_source"/>
        <childnode refid="1144" relation="include">
        </childnode>
        <childnode refid="1135" relation="include">
        </childnode>
      </node>
      <node id="1137">
        <label>mutex</label>
      </node>
      <node id="1139">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="1151">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="1144">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="1129">
        <label>cstring</label>
      </node>
      <node id="1152">
        <label>cereal/types/vector.hpp</label>
      </node>
    </incdepgraph>
    <innerclass refid="classshared__memory_1_1Serializable__exchange" prot="public">shared_memory::Serializable_exchange</innerclass>
    <innernamespace refid="namespaceshared__memory">shared_memory</innernamespace>
    <briefdescription>
<para>Interface to a serializable object. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Berenz </para></simplesect>
<xrefsect id="license_1_license000025"><xreftitle>License</xreftitle><xrefdescription><para>License BSD-3-Clause </para></xrefdescription></xrefsect><simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft. </para></simplesect>
<simplesect kind="date"><para>2019-05-22 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#ifndef<sp/>SERIALIZABLE_EXCHANGE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SERIALIZABLE_EXCHANGE_HPP</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cstring&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;deque&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdexcept&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared_memory/serializable.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="shared__memory_8hpp" kindref="compound">shared_memory/shared_memory.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshared__memory" kindref="compound">shared_memory</ref></highlight></codeline>
<codeline lineno="23"><highlight class="normal">{</highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>Serializable&gt;</highlight></codeline>
<codeline lineno="25" refid="classshared__memory_1_1Serializable__exchange" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshared__memory_1_1Serializable__exchange" kindref="compound">Serializable_exchange</ref></highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1Serializable__exchange" kindref="compound">Serializable_exchange</ref>(std::string<sp/>segment_id,<sp/>std::string<sp/>object_id);</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classshared__memory_1_1Serializable__exchange" kindref="compound">Serializable_exchange</ref>();</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">set</highlight><highlight class="normal">(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="classSerializable" kindref="compound">Serializable</ref><sp/>&amp;serializable);</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>read(<ref refid="classSerializable" kindref="compound">Serializable</ref><sp/>&amp;serializable);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>segment_id_;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>std::string<sp/>object_id_;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*data_;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">};</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="serializable__exchange_8hxx" kindref="compound">serializable_exchange.hxx</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>shared_memory</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="include/shared_memory/serializable_exchange.hpp"/>
  </compounddef>
</doxygen>
