<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="lock_8hpp" kind="file" language="C++">
    <compoundname>lock.hpp</compoundname>
    <includes local="no">boost/interprocess/sync/scoped_lock.hpp</includes>
    <includes refid="mutex_8hpp" local="yes">shared_memory/mutex.hpp</includes>
    <includedby refid="cond__var__ping_8cpp" local="yes">demos/cond_var_ping.cpp</includedby>
    <includedby refid="cond__var__pong_8cpp" local="yes">demos/cond_var_pong.cpp</includedby>
    <includedby refid="sm__cond__var__demo_8cpp" local="yes">demos/sm_cond_var_demo.cpp</includedby>
    <includedby refid="condition__variable_8hpp" local="yes">include/shared_memory/condition_variable.hpp</includedby>
    <includedby refid="lock_8cpp" local="yes">src/lock.cpp</includedby>
    <includedby refid="wrappers_8cpp" local="yes">srcpy/wrappers.cpp</includedby>
    <incdepgraph>
      <node id="840">
        <label>shared_memory/serializer.hxx</label>
        <link refid="serializer_8hxx_source"/>
      </node>
      <node id="836">
        <label>cereal/archives/binary.hpp</label>
      </node>
      <node id="831">
        <label>shared_memory/exceptions.h</label>
        <link refid="exceptions_8h"/>
        <childnode refid="832" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
      </node>
      <node id="815">
        <label>boost/interprocess/sync/scoped_lock.hpp</label>
      </node>
      <node id="835">
        <label>shared_memory/serializer.hpp</label>
        <link refid="serializer_8hpp_source"/>
        <childnode refid="836" relation="include">
        </childnode>
        <childnode refid="837" relation="include">
        </childnode>
        <childnode refid="838" relation="include">
        </childnode>
        <childnode refid="833" relation="include">
        </childnode>
        <childnode refid="839" relation="include">
        </childnode>
        <childnode refid="840" relation="include">
        </childnode>
      </node>
      <node id="819">
        <label>shared_memory/shared_memory.hpp</label>
        <link refid="shared__memory_8hpp"/>
        <childnode refid="820" relation="include">
        </childnode>
        <childnode refid="821" relation="include">
        </childnode>
        <childnode refid="822" relation="include">
        </childnode>
        <childnode refid="823" relation="include">
        </childnode>
        <childnode refid="824" relation="include">
        </childnode>
        <childnode refid="825" relation="include">
        </childnode>
        <childnode refid="826" relation="include">
        </childnode>
        <childnode refid="827" relation="include">
        </childnode>
        <childnode refid="828" relation="include">
        </childnode>
        <childnode refid="829" relation="include">
        </childnode>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="831" relation="include">
        </childnode>
        <childnode refid="834" relation="include">
        </childnode>
        <childnode refid="835" relation="include">
        </childnode>
        <childnode refid="841" relation="include">
        </childnode>
      </node>
      <node id="828">
        <label>boost/interprocess/containers/string.hpp</label>
      </node>
      <node id="823">
        <label>string</label>
      </node>
      <node id="821">
        <label>map</label>
      </node>
      <node id="832">
        <label>exception</label>
      </node>
      <node id="816">
        <label>shared_memory/mutex.hpp</label>
        <link refid="mutex_8hpp_source"/>
        <childnode refid="817" relation="include">
        </childnode>
        <childnode refid="818" relation="include">
        </childnode>
        <childnode refid="819" relation="include">
        </childnode>
      </node>
      <node id="841">
        <label>shared_memory/shared_memory.hxx</label>
        <link refid="shared__memory_8hxx"/>
        <childnode refid="819" relation="include">
        </childnode>
      </node>
      <node id="829">
        <label>boost/interprocess/containers/vector.hpp</label>
      </node>
      <node id="817">
        <label>boost/interprocess/sync/named_mutex.hpp</label>
      </node>
      <node id="824">
        <label>vector</label>
      </node>
      <node id="827">
        <label>boost/interprocess/containers/deque.hpp</label>
      </node>
      <node id="839">
        <label>utility</label>
      </node>
      <node id="833">
        <label>sstream</label>
      </node>
      <node id="826">
        <label>boost/interprocess/allocators/allocator.hpp</label>
      </node>
      <node id="820">
        <label>iostream</label>
      </node>
      <node id="834">
        <label>shared_memory/segment_info.hpp</label>
        <link refid="segment__info_8hpp_source"/>
        <childnode refid="830" relation="include">
        </childnode>
        <childnode refid="820" relation="include">
        </childnode>
      </node>
      <node id="822">
        <label>mutex</label>
      </node>
      <node id="825">
        <label>eigen3/Eigen/Core</label>
      </node>
      <node id="837">
        <label>cereal/types/array.hpp</label>
      </node>
      <node id="830">
        <label>boost/interprocess/managed_shared_memory.hpp</label>
      </node>
      <node id="814">
        <label>include/shared_memory/lock.hpp</label>
        <link refid="lock_8hpp"/>
        <childnode refid="815" relation="include">
        </childnode>
        <childnode refid="816" relation="include">
        </childnode>
      </node>
      <node id="838">
        <label>cereal/types/vector.hpp</label>
      </node>
      <node id="818">
        <label>memory</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="843">
        <label>include/shared_memory/condition_variable.hpp</label>
        <link refid="condition__variable_8hpp_source"/>
      </node>
      <node id="842">
        <label>include/shared_memory/lock.hpp</label>
        <link refid="lock_8hpp"/>
        <childnode refid="843" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classshared__memory_1_1Lock" prot="public">shared_memory::Lock</innerclass>
    <innernamespace refid="namespaceshared__memory">shared_memory</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>2019<sp/>Max<sp/>Planck<sp/>Gesellschaft<sp/>and<sp/>New<sp/>York<sp/>University</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Authors:<sp/>Vincent<sp/>Berenz,<sp/>Maximilien<sp/>Naveau</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;boost/interprocess/sync/scoped_lock.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;shared_memory/mutex.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceshared__memory" kindref="compound">shared_memory</ref></highlight></codeline>
<codeline lineno="10"><highlight class="normal">{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>boost::interprocess::scoped_lock&lt;SHMMutex&gt;<sp/>SHMScopeLock;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">//<sp/>forward<sp/>declaration<sp/>for<sp/>using<sp/>the</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">//<sp/>friend<sp/>keyword<sp/>below</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal">ConditionVariable;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="23" refid="classshared__memory_1_1Lock" refkind="compound"><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classshared__memory_1_1Lock" kindref="compound">Lock</ref></highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classshared__memory_1_1Lock_1aacd7b7ee828e6a83bf18497ea7e33d70" kindref="member">Lock</ref>(<ref refid="classshared__memory_1_1Mutex" kindref="compound">Mutex</ref><sp/>&amp;mutex);</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>condition<sp/>variable<sp/>will<sp/>access</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>SHMScopeLock<sp/>directly<sp/>to<sp/>lock<sp/>it</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">friend</highlight><highlight class="normal"><sp/><ref refid="classshared__memory_1_1ConditionVariable" kindref="compound">ConditionVariable</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>SHMScopeLock<sp/>lock_;</highlight></codeline>
<codeline lineno="36"><highlight class="normal">};</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>shared_memory</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/shared_memory/lock.hpp"/>
  </compounddef>
</doxygen>
