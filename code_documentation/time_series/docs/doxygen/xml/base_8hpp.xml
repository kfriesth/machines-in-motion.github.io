<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="base_8hpp" kind="file" language="C++">
    <compoundname>base.hpp</compoundname>
    <includes local="no">atomic</includes>
    <includes local="no">chrono</includes>
    <includes local="no">cmath</includes>
    <includes local="no">thread</includes>
    <includes local="no">signal_handler/signal_handler.hpp</includes>
    <includes local="no">signal_handler/exceptions.hpp</includes>
    <includes refid="interface_8hpp" local="yes">time_series/interface.hpp</includes>
    <includes refid="specialized__classes_8hpp" local="yes">time_series/internal/specialized_classes.hpp</includes>
    <includes local="yes">real_time_tools/timer.hpp</includes>
    <includes refid="base_8hxx" local="yes">base.hxx</includes>
    <includedby refid="multiprocess__time__series_8hpp" local="yes">include/time_series/multiprocess_time_series.hpp</includedby>
    <includedby refid="time__series_8hpp" local="yes">include/time_series/time_series.hpp</includedby>
    <incdepgraph>
      <node id="83">
        <label>atomic</label>
      </node>
      <node id="91">
        <label>limits</label>
      </node>
      <node id="89">
        <label>time_series/interface.hpp</label>
        <link refid="interface_8hpp"/>
        <childnode refid="90" relation="include">
        </childnode>
        <childnode refid="91" relation="include">
        </childnode>
      </node>
      <node id="98">
        <label>shared_memory/lock.hpp</label>
      </node>
      <node id="100">
        <label>real_time_tools/timer.hpp</label>
      </node>
      <node id="87">
        <label>signal_handler/signal_handler.hpp</label>
      </node>
      <node id="99">
        <label>shared_memory/mutex.hpp</label>
      </node>
      <node id="85">
        <label>cmath</label>
      </node>
      <node id="101">
        <label>base.hxx</label>
        <link refid="base_8hxx_source"/>
      </node>
      <node id="92">
        <label>time_series/internal/specialized_classes.hpp</label>
        <link refid="specialized__classes_8hpp_source"/>
        <childnode refid="93" relation="include">
        </childnode>
        <childnode refid="94" relation="include">
        </childnode>
        <childnode refid="95" relation="include">
        </childnode>
        <childnode refid="96" relation="include">
        </childnode>
        <childnode refid="97" relation="include">
        </childnode>
        <childnode refid="98" relation="include">
        </childnode>
        <childnode refid="99" relation="include">
        </childnode>
      </node>
      <node id="82">
        <label>include/time_series/internal/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="83" relation="include">
        </childnode>
        <childnode refid="84" relation="include">
        </childnode>
        <childnode refid="85" relation="include">
        </childnode>
        <childnode refid="86" relation="include">
        </childnode>
        <childnode refid="87" relation="include">
        </childnode>
        <childnode refid="88" relation="include">
        </childnode>
        <childnode refid="89" relation="include">
        </childnode>
        <childnode refid="92" relation="include">
        </childnode>
        <childnode refid="100" relation="include">
        </childnode>
        <childnode refid="101" relation="include">
        </childnode>
      </node>
      <node id="93">
        <label>condition_variable</label>
      </node>
      <node id="88">
        <label>signal_handler/exceptions.hpp</label>
      </node>
      <node id="95">
        <label>vector</label>
      </node>
      <node id="97">
        <label>shared_memory/condition_variable.hpp</label>
      </node>
      <node id="90">
        <label>cstddef</label>
      </node>
      <node id="94">
        <label>mutex</label>
      </node>
      <node id="84">
        <label>chrono</label>
      </node>
      <node id="96">
        <label>shared_memory/array.hpp</label>
      </node>
      <node id="86">
        <label>thread</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="104">
        <label>demos/demo_multiprocess_read.cpp</label>
        <link refid="demo__multiprocess__read_8cpp"/>
      </node>
      <node id="102">
        <label>include/time_series/internal/base.hpp</label>
        <link refid="base_8hpp"/>
        <childnode refid="103" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
      </node>
      <node id="107">
        <label>demos/demo_time_series.cpp</label>
        <link refid="demo__time__series_8cpp"/>
      </node>
      <node id="105">
        <label>demos/demo_multiprocess_write.cpp</label>
        <link refid="demo__multiprocess__write_8cpp"/>
      </node>
      <node id="106">
        <label>include/time_series/time_series.hpp</label>
        <link refid="time__series_8hpp"/>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="103">
        <label>include/time_series/multiprocess_time_series.hpp</label>
        <link refid="multiprocess__time__series_8hpp_source"/>
        <childnode refid="104" relation="include">
        </childnode>
        <childnode refid="105" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="classtime__series_1_1internal_1_1TimeSeriesBase" prot="public">time_series::internal::TimeSeriesBase</innerclass>
    <innernamespace refid="namespacetime__series">time_series</innernamespace>
    <innernamespace refid="namespacetime__series_1_1internal">time_series::internal</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">//<sp/>Copyright<sp/>(c)<sp/>2019<sp/>Max<sp/>Planck<sp/>Gesellschaft</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">//<sp/>Vincent<sp/>Berenz</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6" refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a5033638ac101e5dde69400ff9dcd5fd3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;atomic&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;chrono&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;cmath&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;thread&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal_handler/signal_handler.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;signal_handler/exceptions.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="interface_8hpp" kindref="compound">time_series/interface.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;time_series/internal/specialized_classes.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;real_time_tools/timer.hpp&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespacetime__series" kindref="compound">time_series</ref></highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">internal</highlight></codeline>
<codeline lineno="22"><highlight class="normal">{</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">//<sp/>implement<sp/>all<sp/>the<sp/>code<sp/>common<sp/>to<sp/>multithread<sp/>time_series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="comment">//<sp/>and<sp/>multiprocesses<sp/>time_series</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="comment">//<sp/>P<sp/>will<sp/>be<sp/>expected<sp/>to<sp/>be<sp/>SINGLEPROCESS<sp/>or<sp/>MULTIPROCESS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">//<sp/>(types<sp/>defined<sp/>in<sp/>specialized_classes.hpp)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">template</highlight><highlight class="normal"><sp/>&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T<sp/>=<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">&gt;</highlight></codeline>
<codeline lineno="30" refid="classtime__series_1_1internal_1_1TimeSeriesBase" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase" kindref="compound">TimeSeriesBase</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1TimeSeriesInterface" kindref="compound">TimeSeriesInterface</ref>&lt;T&gt;</highlight></codeline>
<codeline lineno="31"><highlight class="normal">{</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase" kindref="compound">TimeSeriesBase</ref>(Index<sp/>start_timeindex<sp/>=<sp/>0);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/>~<ref refid="classtime__series_1_1internal_1_1TimeSeriesBase" kindref="compound">TimeSeriesBase</ref>();</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ae0a1c969dce12c09454451eb74f01983" kindref="member">newest_timeindex</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a1e384606bee9664d05803f33235a0d60" kindref="member">count_appended_elements</ref>();</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a4e6a5b253566c71972a9470bb33c7d8a" kindref="member">oldest_timeindex</ref>(</highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>wait<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a12bd405933d326fd8396fb2bc1267223" kindref="member">newest_element</ref>();</highlight></codeline>
<codeline lineno="39" refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ad20c1f90dd2f9016f32132caa3f976f7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>T<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aa7267458e4fadff7314037a4bd1d53bb" kindref="member">operator[]</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>&amp;timeindex);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>Timestamp<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a1e4c7ca710bb14e7dce57a1dd9c4f929" kindref="member">timestamp_ms</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>&amp;timeindex);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/>Timestamp<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aacca694af4c53fa4ae9cd3593c12bf58" kindref="member">timestamp_s</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>&amp;timeindex);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a5651e522492514408e38a5b99e144a06" kindref="member">wait_for_timeindex</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>&amp;timeindex,</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>&amp;max_duration_s<sp/>=</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::numeric_limits&lt;double&gt;::quiet_NaN());</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ae6da9bd31ca06b30413f2073bc2e48e6" kindref="member">length</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1aee1bf636a094a3068f9de731688c3972" kindref="member">max_length</ref>();</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a38511cb227e3e423922eaaea626a15ee" kindref="member">has_changed_since_tag</ref>();</highlight></codeline>
<codeline lineno="48" refid="classtime__series_1_1internal_1_1TimeSeriesBase_1adadeeff6e42776853e26aa5f74264909" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ad20c1f90dd2f9016f32132caa3f976f7" kindref="member">tag</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Index<sp/>&amp;timeindex);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1adadeeff6e42776853e26aa5f74264909" kindref="member">tagged_timeindex</ref>();</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a09293ae95cdc492e7de78729b0e0e398" kindref="member">append</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>T<sp/>&amp;element);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1acc3fa7fbde0873597358b70d41b7dbd2" kindref="member">is_empty</ref>();</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>case<sp/>of<sp/>multiprocesses:<sp/>will<sp/>be<sp/>used<sp/>to<sp/>keep</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>indexes<sp/>values<sp/>aligned<sp/>for<sp/>all<sp/>instances</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a38511cb227e3e423922eaaea626a15ee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>read_indexes()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>write_indexes()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/>start_timeindex_;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/>oldest_timeindex_;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/>newest_timeindex_;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/>Index<sp/>tagged_timeindex_;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="classtime__series_1_1internal_1_1TimeSeriesBase_1ae0a1c969dce12c09454451eb74f01983" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>non<sp/>shared<sp/>variable.<sp/>initialized<sp/>at<sp/>true,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>and<sp/>switched<sp/>to<sp/>false<sp/>when<sp/>an<sp/>element<sp/>is<sp/>observed</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>in<sp/>the<sp/>time<sp/>series.<sp/>Used<sp/>only<sp/>in<sp/>the<sp/>&quot;is_empty&quot;<sp/>method.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>empty_;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>see<sp/>specialized_classes.hpp<sp/>for</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>implementations<sp/>depending<sp/>on<sp/>P</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>(SINGLEPROCESS<sp/>or<sp/>MULTIPROCESS)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Mutex&lt;P&gt;<sp/>&gt;<sp/>mutex_ptr_;</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;ConditionVariable&lt;P&gt;<sp/>&gt;<sp/>condition_ptr_;</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Vector&lt;P,<sp/>T&gt;<sp/>&gt;<sp/>history_elements_ptr_;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Vector&lt;P,<sp/>Timestamp&gt;<sp/>&gt;<sp/>history_timestamps_ptr_;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="keyword">private</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/>std::thread<sp/>signal_monitor_thread_;</highlight></codeline>
<codeline lineno="82" refid="classtime__series_1_1internal_1_1TimeSeriesBase_1af341bff555b4e5881ae8426b0e5e9b30" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/>std::atomic&lt;bool&gt;<sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1af341bff555b4e5881ae8426b0e5e9b30" kindref="member">is_destructor_called_</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1adac95950208bcb190556db4b8b42cbf0" kindref="member">monitor_signal</ref>();</highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a5033638ac101e5dde69400ff9dcd5fd3" kindref="member">throw_if_sigint_received</ref>();</highlight></codeline>
<codeline lineno="94"><highlight class="normal">};</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;base.hxx&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97" refid="classtime__series_1_1internal_1_1TimeSeriesBase_1a4e6a5b253566c71972a9470bb33c7d8a" refkind="member"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>internal</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal">}<sp/><sp/></highlight><highlight class="comment">//<sp/>namespace<sp/>time_series</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="include/time_series/internal/base.hpp"/>
  </compounddef>
</doxygen>
