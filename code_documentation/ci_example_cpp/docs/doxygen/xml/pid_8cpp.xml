<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="pid_8cpp" kind="file" language="C++">
    <compoundname>pid.cpp</compoundname>
    <includes refid="pid_8hpp" local="yes">ci_example_cpp/pid.hpp</includes>
    <incdepgraph>
      <node id="108">
        <label>ci_example_cpp/gains_configuration.hpp</label>
        <link refid="gains__configuration_8hpp"/>
        <childnode refid="109" relation="include">
        </childnode>
        <childnode refid="110" relation="include">
        </childnode>
      </node>
      <node id="104">
        <label>ci_example_cpp/pid.hpp</label>
        <link refid="pid_8hpp"/>
        <childnode refid="105" relation="include">
        </childnode>
        <childnode refid="106" relation="include">
        </childnode>
        <childnode refid="107" relation="include">
        </childnode>
      </node>
      <node id="109">
        <label>string</label>
      </node>
      <node id="107">
        <label>ci_example_cpp/default_configuration.hpp</label>
        <link refid="default__configuration_8hpp"/>
        <childnode refid="108" relation="include">
        </childnode>
      </node>
      <node id="106">
        <label>vector</label>
      </node>
      <node id="103">
        <label>src/pid.cpp</label>
        <link refid="pid_8cpp"/>
        <childnode refid="104" relation="include">
        </childnode>
      </node>
      <node id="110">
        <label>iostream</label>
      </node>
      <node id="105">
        <label>memory</label>
      </node>
    </incdepgraph>
    <innerclass refid="classci__example__cpp_1_1Default__pid__factory" prot="public">ci_example_cpp::Default_pid_factory</innerclass>
    <innernamespace refid="namespaceci__example__cpp">ci_example_cpp</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Vincent Berenz </para></simplesect>
<simplesect kind="copyright"><para>Copyright (c) 2019, New York University and Max Planck Gesellschaft, License BSD-3-Clause </para></simplesect>
<simplesect kind="date"><para>2019-12-09 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="8"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pid_8hpp" kindref="compound">ci_example_cpp/pid.hpp</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespaceci__example__cpp" kindref="compound">ci_example_cpp</ref><sp/>{</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><ref refid="classci__example__cpp_1_1PID_1a8e82fde951fff38658098ff84bbb5cbe" kindref="member">PID::PID</ref>()</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>:<sp/>integral_(0)<sp/>{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>configuration_<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>DefaultConfiguration();</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/>private_configuration_<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><ref refid="classci__example__cpp_1_1PID_1a8e82fde951fff38658098ff84bbb5cbe" kindref="member">PID::PID</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>Gains_configuration<sp/>&amp;configuration)</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>:configuration_(&amp;configuration),private_configuration_(false),integral_(0)<sp/>{}</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/>PID::~PID(){</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(private_configuration_){</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal"><sp/>configuration_;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><ref refid="classci__example__cpp_1_1PID_1a75a4ccf0455e48e84af23e1d28b0337d" kindref="member">PID::compute</ref>(<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position,</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>velocity,</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position_target,</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>delta_time<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>position_error<sp/>=<sp/>position_target-position;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>integral_<sp/>+=<sp/>delta_time<sp/>*<sp/>position_error;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>f<sp/>=<sp/>position_error*configuration_-&gt;get_kp()</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>-<sp/>velocity*configuration_-&gt;get_kd()</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>integral_*configuration_-&gt;get_ki();</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>f;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classci__example__cpp_1_1PID_1a65d98fccd38cc385debc3d15670caf0e" kindref="member">PID::reset_integral</ref>(){</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;integral_=0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="classci__example__cpp_1_1Default__pid__factory" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classci__example__cpp_1_1Default__pid__factory" kindref="compound">Default_pid_factory</ref><sp/>{</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;Gains_configuration&gt;<sp/>&gt;<sp/>configs_;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;PID&gt;<sp/>&gt;<sp/>controllers_;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/><ref refid="classci__example__cpp_1_1PID" kindref="compound">PID</ref>&amp;<sp/></highlight><highlight class="keyword">get</highlight><highlight class="normal">(){</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;Gains_configuration&gt;<sp/>configuration(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classci__example__cpp_1_1DefaultConfiguration" kindref="compound">DefaultConfiguration</ref>());</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>std::shared_ptr&lt;PID&gt;<sp/>controller(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="classci__example__cpp_1_1PID" kindref="compound">PID</ref>(*configuration));</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>configs_.push_back(configuration);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>controllers_.push_back(controller);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>*controller;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;Gains_configuration&gt;<sp/>&gt;<sp/><ref refid="classci__example__cpp_1_1Default__pid__factory_1aea273f7df00844476e72b7e6951a493e" kindref="member">Default_pid_factory::configs_</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/>std::vector&lt;<sp/>std::shared_ptr&lt;PID&gt;<sp/>&gt;<sp/><ref refid="classci__example__cpp_1_1Default__pid__factory_1a39274f87a4700b707ba983d54db2df76" kindref="member">Default_pid_factory::controllers_</ref>;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><ref refid="classci__example__cpp_1_1PID" kindref="compound">PID</ref>&amp;<sp/><ref refid="pid_8hpp_1ae98dfa6f474e368f3d1865d65406ec1f" kindref="member">get_default_pid</ref>(){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="classci__example__cpp_1_1Default__pid__factory_1a5dbbcfbe3e19953b9d0c490ea62fde1a" kindref="member">Default_pid_factory::get</ref>();</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/pid.cpp"/>
  </compounddef>
</doxygen>
