<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.13">
  <compounddef id="classci__example__python_1_1pid_1_1PID" kind="class" language="Python" prot="public">
    <compoundname>ci_example_python::pid::PID</compoundname>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classci__example__python_1_1pid_1_1PID_1aee04c262f9b064702e13dd864f6b6f0f" prot="private" static="no" mutable="no">
        <type></type>
        <definition>ci_example_python.pid.PID::_configuration</definition>
        <argsstring></argsstring>
        <name>_configuration</name>
        <briefdescription>
<para>The <ref refid="classci__example__python_1_1pid_1_1PID" kindref="compound">PID</ref> gains. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/ci_example_python/pid.py" line="91" column="1" bodyfile="python/ci_example_python/pid.py" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classci__example__python_1_1pid_1_1PID_1a26b060dae844d341f5445980e869ba15" prot="private" static="no" mutable="no">
        <type></type>
        <definition>ci_example_python.pid.PID::_integral</definition>
        <argsstring></argsstring>
        <name>_integral</name>
        <briefdescription>
<para>The integral term. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/ci_example_python/pid.py" line="92" column="1" bodyfile="python/ci_example_python/pid.py" bodystart="92" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classci__example__python_1_1pid_1_1PID_1a904d0150a78efa3d5a3b7483aa310776" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def ci_example_python.pid.PID.__init__</definition>
        <argsstring>(self, configuration)</argsstring>
        <name>__init__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>configuration</type>
          <defname>configuration</defname>
        </param>
        <briefdescription>
<para>Constructor, initiallize the <ref refid="classci__example__python_1_1pid_1_1PID" kindref="compound">PID</ref> gains from a given configuration. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>configuration</parametername>
</parameternamelist>
<parameterdescription>
<para>Any object with &quot;kp&quot;, &quot;kd&quot; and &quot;ki&quot; attributes (as float) </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/ci_example_python/pid.py" line="90" column="1" bodyfile="python/ci_example_python/pid.py" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classci__example__python_1_1pid_1_1PID_1a5810a7e3cf5db4ab2752e5d1502be766" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def ci_example_python.pid.PID.get_gains</definition>
        <argsstring>(self)</argsstring>
        <name>get_gains</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Get the gains in a dictionary, keys: &quot;kp&quot;, &quot;kd&quot; and &quot;ki&quot;. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Dict <computeroutput>--</computeroutput> The <ref refid="classci__example__python_1_1pid_1_1PID" kindref="compound">PID</ref> gains. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/ci_example_python/pid.py" line="98" column="1" bodyfile="python/ci_example_python/pid.py" bodystart="98" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classci__example__python_1_1pid_1_1PID_1a8958d8b988959214b187539939030baa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def ci_example_python.pid.PID.reset_integral</definition>
        <argsstring>(self)</argsstring>
        <name>reset_integral</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Reset integral part of the <ref refid="classci__example__python_1_1pid_1_1PID" kindref="compound">PID</ref> to 0.0. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/ci_example_python/pid.py" line="104" column="1" bodyfile="python/ci_example_python/pid.py" bodystart="104" bodyend="106"/>
      </memberdef>
      <memberdef kind="function" id="classci__example__python_1_1pid_1_1PID_1aca3a513839029dd9cd7f46cff130c4ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def ci_example_python.pid.PID.compute</definition>
        <argsstring>(self, position, velocity, position_target, delta_time)</argsstring>
        <name>compute</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <param>
          <type>position</type>
          <defname>position</defname>
        </param>
        <param>
          <type>velocity</type>
          <defname>velocity</defname>
        </param>
        <param>
          <type>position_target</type>
          <defname>position_target</defname>
        </param>
        <param>
          <type>delta_time</type>
          <defname>delta_time</defname>
        </param>
        <briefdescription>
<para>Compute the force related to the pid controller. </para>        </briefdescription>
        <detaileddescription>
<para>This function is not stateless, as it performs integration. Call <ref refid="classci__example__python_1_1pid_1_1PID_1a8958d8b988959214b187539939030baa" kindref="member">reset_integral()</ref> to reset the integral part.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>position</parametername>
</parameternamelist>
<parameterdescription>
<para>Float <computeroutput>--</computeroutput> current position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>velocity</parametername>
</parameternamelist>
<parameterdescription>
<para>Float <computeroutput>--</computeroutput> current velocity </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>position_target</parametername>
</parameternamelist>
<parameterdescription>
<para>Float <computeroutput>--</computeroutput> target position </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>delta_time</parametername>
</parameternamelist>
<parameterdescription>
<para>Float <computeroutput>--</computeroutput> time passed since last measurement. Used for integral computation </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Float <computeroutput>--</computeroutput> computed force </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/ci_example_python/pid.py" line="121" column="1" bodyfile="python/ci_example_python/pid.py" bodystart="121" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classci__example__python_1_1pid_1_1PID_1a55e1d7ef174e9eb02566a5b674591da7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>def</type>
        <definition>def ci_example_python.pid.PID.__str__</definition>
        <argsstring>(self)</argsstring>
        <name>__str__</name>
        <param>
          <type>self</type>
          <defname>self</defname>
        </param>
        <briefdescription>
<para>Convert the object into a string. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="python/ci_example_python/pid.py" line="129" column="1" bodyfile="python/ci_example_python/pid.py" bodystart="129" bodyend="132"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Simple 1D <ref refid="classci__example__python_1_1pid_1_1PID" kindref="compound">PID</ref> controller. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="python/ci_example_python/pid.py" line="77" column="1" bodyfile="python/ci_example_python/pid.py" bodystart="77" bodyend="133"/>
    <listofallmembers>
      <member refid="classci__example__python_1_1pid_1_1PID_1a904d0150a78efa3d5a3b7483aa310776" prot="public" virt="non-virtual"><scope>ci_example_python::pid::PID</scope><name>__init__</name></member>
      <member refid="classci__example__python_1_1pid_1_1PID_1a55e1d7ef174e9eb02566a5b674591da7" prot="public" virt="non-virtual"><scope>ci_example_python::pid::PID</scope><name>__str__</name></member>
      <member refid="classci__example__python_1_1pid_1_1PID_1aee04c262f9b064702e13dd864f6b6f0f" prot="private" virt="non-virtual"><scope>ci_example_python::pid::PID</scope><name>_configuration</name></member>
      <member refid="classci__example__python_1_1pid_1_1PID_1a26b060dae844d341f5445980e869ba15" prot="private" virt="non-virtual"><scope>ci_example_python::pid::PID</scope><name>_integral</name></member>
      <member refid="classci__example__python_1_1pid_1_1PID_1aca3a513839029dd9cd7f46cff130c4ab" prot="public" virt="non-virtual"><scope>ci_example_python::pid::PID</scope><name>compute</name></member>
      <member refid="classci__example__python_1_1pid_1_1PID_1a5810a7e3cf5db4ab2752e5d1502be766" prot="public" virt="non-virtual"><scope>ci_example_python::pid::PID</scope><name>get_gains</name></member>
      <member refid="classci__example__python_1_1pid_1_1PID_1a8958d8b988959214b187539939030baa" prot="public" virt="non-virtual"><scope>ci_example_python::pid::PID</scope><name>reset_integral</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
